<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classapfel_1_1Operator" kind="class" language="C++" prot="public">
    <compoundname>apfel::Operator</compoundname>
    <includes refid="operator_8h" local="no">operator.h</includes>
      <sectiondef kind="user-defined">
      <header>Binary operators</header>
      <memberdef kind="function" id="classapfel_1_1Operator_1ac1cb0fe68195da6906fda8962c7b6b30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classapfel_1_1Distribution" kindref="compound">Distribution</ref></type>
        <definition>Distribution apfel::Operator::operator*=</definition>
        <argsstring>(Distribution const &amp;d) const</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="classapfel_1_1Distribution" kindref="compound">Distribution</ref> const &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>this *= <ref refid="classapfel_1_1Distribution" kindref="compound">Distribution</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="54" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1Operator_1a742e56ade4ec8477ea8612e2e06ad733" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
        <definition>Operator&amp; apfel::Operator::operator=</definition>
        <argsstring>(Operator const &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>this = <ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="55" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1Operator_1ae1793de9758e1ff471d49d2146065cc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
        <definition>Operator&amp; apfel::Operator::operator*=</definition>
        <argsstring>(Operator const &amp;o)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>this *= <ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="56" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1Operator_1abc9ccd77eb726d02531f93b646253657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
        <definition>Operator&amp; apfel::Operator::operator*=</definition>
        <argsstring>(double const &amp;s)</argsstring>
        <name>operator*=</name>
        <param>
          <type>double const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>this *= Scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="57" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1Operator_1ae16f653163d430acf44939e88ac34e2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
        <definition>Operator&amp; apfel::Operator::operator*=</definition>
        <argsstring>(std::function&lt; double(double const &amp;)&gt; f)</argsstring>
        <name>operator*=</name>
        <param>
          <type>std::function&lt; double(double const &amp;)&gt;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>This *= Function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="58" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1Operator_1a1172c12a1f531590b87c9cf3cb13c1ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
        <definition>Operator&amp; apfel::Operator::operator/=</definition>
        <argsstring>(double const &amp;s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>double const &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>this /= Scalar </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="59" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1Operator_1ac4c1a7c55a744ee999a9b3ece470f586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
        <definition>Operator&amp; apfel::Operator::operator+=</definition>
        <argsstring>(Operator const &amp;o)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>this += <ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="60" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1Operator_1a78a08b999e345ec9904591b45d32b793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
        <definition>Operator&amp; apfel::Operator::operator-=</definition>
        <argsstring>(Operator const &amp;o)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> const &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>this -= <ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="61" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classapfel_1_1Operator_1a07ea5d7c9382f4566be27fd651bfb600" prot="protected" static="no" mutable="no">
        <type><ref refid="classapfel_1_1Grid" kindref="compound">Grid</ref> const  &amp;</type>
        <definition>Grid const&amp; apfel::Operator::_grid</definition>
        <argsstring></argsstring>
        <name>_grid</name>
        <briefdescription>
<para><ref refid="classapfel_1_1Grid" kindref="compound">Grid</ref> on which to compute the operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="75" column="40" bodyfile="inc/apfel/operator.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapfel_1_1Operator_1ae6c0584d4cb48d760cbed8ed838177df" prot="protected" static="no" mutable="no">
        <type>bool const</type>
        <definition>bool const apfel::Operator::_erbl</definition>
        <argsstring></argsstring>
        <name>_erbl</name>
        <briefdescription>
<para>If the operator is ERBL-like. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="76" column="41" bodyfile="inc/apfel/operator.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapfel_1_1Operator_1a07e107c11a823ef3565e825f172d1d0e" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classapfel_1_1ExtendedVector" kindref="compound">ExtendedVector</ref>&lt; double &gt; &gt;</type>
        <definition>std::vector&lt;ExtendedVector&lt;double&gt; &gt; apfel::Operator::_Operator</definition>
        <argsstring></argsstring>
        <name>_Operator</name>
        <briefdescription>
<para><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="77" column="17" bodyfile="inc/apfel/operator.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classapfel_1_1Operator_1abed3b7be91a5e75cea637a87fb4fa5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apfel::Operator::Operator</definition>
        <argsstring>()=delete</argsstring>
        <name>Operator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="25" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1Operator_1a73a58960bf7ada6b45205a653494d23c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apfel::Operator::Operator</definition>
        <argsstring>(Grid const &amp;gr, Expression const &amp;expr, double const &amp;eps=1e-5, bool const &amp;erbl=false)</argsstring>
        <name>Operator</name>
        <param>
          <type><ref refid="classapfel_1_1Grid" kindref="compound">Grid</ref> const &amp;</type>
          <declname>gr</declname>
        </param>
        <param>
          <type><ref refid="classapfel_1_1Expression" kindref="compound">Expression</ref> const &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>eps</declname>
          <defval>1e-5</defval>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>erbl</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>The <ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gr</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classapfel_1_1Grid" kindref="compound">Grid</ref> object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>the expression to be transformed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps</parametername>
</parameternamelist>
<parameterdescription>
<para>relative accuracy of the numerical integrations (default: 10<superscript>-5</superscript>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>erbl</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the convolution integral is ERBL like (default: false) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="34" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1Operator_1aba4d731f588dc546d932bd0def8a179e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apfel::Operator::Operator</definition>
        <argsstring>(Grid const &amp;gr, Expression const &amp;expr, bool const &amp;erbl, double const &amp;eps=1e-5)</argsstring>
        <name>Operator</name>
        <param>
          <type><ref refid="classapfel_1_1Grid" kindref="compound">Grid</ref> const &amp;</type>
          <declname>gr</declname>
        </param>
        <param>
          <type><ref refid="classapfel_1_1Expression" kindref="compound">Expression</ref> const &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>bool const &amp;</type>
          <declname>erbl</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>eps</declname>
          <defval>1e-5</defval>
        </param>
        <briefdescription>
<para>The <ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gr</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classapfel_1_1Grid" kindref="compound">Grid</ref> object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expr</parametername>
</parameternamelist>
<parameterdescription>
<para>the expression to be transformed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>erbl</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the convolution integral is ERBL like </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps</parametername>
</parameternamelist>
<parameterdescription>
<para>relative accuracy of the numerical integrations (default: 10<superscript>-5</superscript>) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="43" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1Operator_1a4168d067d2954d59b9e2a9657935ea90" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool apfel::Operator::IsERBL</definition>
        <argsstring>() const</argsstring>
        <name>IsERBL</name>
        <briefdescription>
<para>Function that returns the ERBL-like flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="48" column="10" bodyfile="inc/apfel/operator.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1Operator_1adaff7602598e18c5af64be8111fb6151" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classapfel_1_1Grid" kindref="compound">Grid</ref> const  &amp;</type>
        <definition>Grid const&amp; apfel::Operator::GetGrid</definition>
        <argsstring>() const</argsstring>
        <name>GetGrid</name>
        <briefdescription>
<para>Function that returns the <ref refid="classapfel_1_1Grid" kindref="compound">Grid</ref> object of the operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="67" column="16" bodyfile="inc/apfel/operator.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1Operator_1aaaa1e7b38859872935b13d5b3e324b47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classapfel_1_1ExtendedVector" kindref="compound">ExtendedVector</ref>&lt; double &gt; &gt;</type>
        <definition>std::vector&lt;ExtendedVector&lt;double&gt; &gt; apfel::Operator::GetOperator</definition>
        <argsstring>() const</argsstring>
        <name>GetOperator</name>
        <briefdescription>
<para>Function that returns the operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="72" column="17" bodyfile="inc/apfel/operator.h" bodystart="72" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classapfel_1_1Operator_1ad85b02048b86d0d76b64faed45ffed47" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, Operator const &amp;sg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> const &amp;</type>
          <declname>sg</declname>
        </param>
        <briefdescription>
<para>Method which prints <ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> with cout &lt;&lt;. This only prints the <ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> on the first subgrid and is supposed to be used for debugging purposes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/operator.h" line="79" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref> class defines the basic object &quot;Operator&quot; which is essentially the convolution on the grid bewteen an <ref refid="classapfel_1_1Expression" kindref="compound">Expression</ref> object (e.g. a splitting function) and the interpolant functions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>std::vector&lt; std::pair&lt; int, int &gt; &gt;</label>
      </node>
      <node id="8">
        <label>std::vector&lt; double &gt;</label>
      </node>
      <node id="2">
        <label>apfel::Grid</label>
        <link refid="classapfel_1_1Grid"/>
        <childnode refid="3" relation="usage">
          <edgelabel>_JointToSubMap</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>_SubToJointMap</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>_JointGrid</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>_GlobalGrid</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::unique_ptr&lt; apfel::SubGrid &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>apfel::ExtendedVector&lt; double &gt;</label>
        <link refid="classapfel_1_1ExtendedVector"/>
        <childnode refid="8" relation="usage">
          <edgelabel>_vector</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; std::vector&lt; int &gt; &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>std::vector&lt; apfel::SubGrid &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>apfel::SubGrid</label>
        <link refid="classapfel_1_1SubGrid"/>
        <childnode refid="8" relation="usage">
          <edgelabel>_lxsg</edgelabel>
          <edgelabel>_xsg</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>apfel::Operator</label>
        <link refid="classapfel_1_1Operator"/>
        <childnode refid="2" relation="usage">
          <edgelabel>_grid</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>_Operator</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::vector&lt; apfel::ExtendedVector&lt; double &gt; &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; int &gt;</label>
      </node>
    </collaborationgraph>
    <location file="inc/apfel/operator.h" line="22" column="3" bodyfile="inc/apfel/operator.h" bodystart="23" bodyend="80"/>
    <listofallmembers>
      <member refid="classapfel_1_1Operator_1ae6c0584d4cb48d760cbed8ed838177df" prot="protected" virt="non-virtual"><scope>apfel::Operator</scope><name>_erbl</name></member>
      <member refid="classapfel_1_1Operator_1a07ea5d7c9382f4566be27fd651bfb600" prot="protected" virt="non-virtual"><scope>apfel::Operator</scope><name>_grid</name></member>
      <member refid="classapfel_1_1Operator_1a07e107c11a823ef3565e825f172d1d0e" prot="protected" virt="non-virtual"><scope>apfel::Operator</scope><name>_Operator</name></member>
      <member refid="classapfel_1_1Operator_1adaff7602598e18c5af64be8111fb6151" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>GetGrid</name></member>
      <member refid="classapfel_1_1Operator_1aaaa1e7b38859872935b13d5b3e324b47" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>GetOperator</name></member>
      <member refid="classapfel_1_1Operator_1a4168d067d2954d59b9e2a9657935ea90" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>IsERBL</name></member>
      <member refid="classapfel_1_1Operator_1abed3b7be91a5e75cea637a87fb4fa5d0" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>Operator</name></member>
      <member refid="classapfel_1_1Operator_1a73a58960bf7ada6b45205a653494d23c" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>Operator</name></member>
      <member refid="classapfel_1_1Operator_1aba4d731f588dc546d932bd0def8a179e" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>Operator</name></member>
      <member refid="classapfel_1_1Operator_1ac1cb0fe68195da6906fda8962c7b6b30" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>operator*=</name></member>
      <member refid="classapfel_1_1Operator_1ae1793de9758e1ff471d49d2146065cc5" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>operator*=</name></member>
      <member refid="classapfel_1_1Operator_1abc9ccd77eb726d02531f93b646253657" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>operator*=</name></member>
      <member refid="classapfel_1_1Operator_1ae16f653163d430acf44939e88ac34e2e" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>operator*=</name></member>
      <member refid="classapfel_1_1Operator_1ac4c1a7c55a744ee999a9b3ece470f586" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>operator+=</name></member>
      <member refid="classapfel_1_1Operator_1a78a08b999e345ec9904591b45d32b793" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>operator-=</name></member>
      <member refid="classapfel_1_1Operator_1a1172c12a1f531590b87c9cf3cb13c1ef" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>operator/=</name></member>
      <member refid="classapfel_1_1Operator_1ad85b02048b86d0d76b64faed45ffed47" prot="protected" virt="non-virtual"><scope>apfel::Operator</scope><name>operator&lt;&lt;</name></member>
      <member refid="classapfel_1_1Operator_1a742e56ade4ec8477ea8612e2e06ad733" prot="public" virt="non-virtual"><scope>apfel::Operator</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
