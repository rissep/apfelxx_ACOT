<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classapfel_1_1TabulateObject" kind="class" language="C++" prot="public">
    <compoundname>apfel::TabulateObject</compoundname>
    <basecompoundref refid="classapfel_1_1QGrid" prot="public" virt="non-virtual">apfel::QGrid&lt; T &gt;</basecompoundref>
    <includes refid="tabulateobject_8h" local="no">tabulateobject.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <description><para>List of constructors. </para>
</description>
      <memberdef kind="function" id="classapfel_1_1TabulateObject_1aae6bb3a4886b480727716a8be06b7f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apfel::TabulateObject&lt; T &gt;::TabulateObject</definition>
        <argsstring>(MatchedEvolution&lt; T &gt; &amp;Object, int const &amp;nQ, double const &amp;QMin, double const &amp;QMax, int const &amp;InterDegree, double const &amp;Lambda=0.25)</argsstring>
        <name>TabulateObject</name>
        <param>
          <type><ref refid="classapfel_1_1MatchedEvolution" kindref="compound">MatchedEvolution</ref>&lt; T &gt; &amp;</type>
          <declname>Object</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>nQ</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>QMin</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>QMax</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>InterDegree</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>Lambda</declname>
          <defval>0.25</defval>
        </param>
        <briefdescription>
<para>The <ref refid="classapfel_1_1TabulateObject" kindref="compound">TabulateObject</ref> constructor for an &quot;evolving&quot; object (<ref refid="classapfel_1_1MatchedEvolution" kindref="compound">MatchedEvolution</ref>). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Object</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classapfel_1_1MatchedEvolution" kindref="compound">MatchedEvolution</ref> type object to be tabulated in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nQ</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of on nodes of the grid in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>QMin</parametername>
</parameternamelist>
<parameterdescription>
<para>the lower bound of the grid in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>QMax</parametername>
</parameternamelist>
<parameterdescription>
<para>the upper bound of the grid in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InterDegree</parametername>
</parameternamelist>
<parameterdescription>
<para>the interpolation degree on the grid in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the parameter in the function ln(ln(Q<superscript>2</superscript>/<Lambda/><superscript>2</superscript>)) used for the tabulation (default: 0.25) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/tabulateobject.h" line="43" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1TabulateObject_1a5338ef7f98041dbf7b2d35dcdcab5cfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apfel::TabulateObject&lt; T &gt;::TabulateObject</definition>
        <argsstring>(std::function&lt; T(double const &amp;)&gt; const &amp;Object, int const &amp;nQ, double const &amp;QMin, double const &amp;QMax, int const &amp;InterDegree, std::vector&lt; double &gt; const &amp;Thresholds, double const &amp;Lambda=0.25)</argsstring>
        <name>TabulateObject</name>
        <param>
          <type>std::function&lt; T(double const &amp;)&gt; const &amp;</type>
          <declname>Object</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>nQ</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>QMin</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>QMax</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>InterDegree</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>Thresholds</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>Lambda</declname>
          <defval>0.25</defval>
        </param>
        <briefdescription>
<para>The <ref refid="classapfel_1_1TabulateObject" kindref="compound">TabulateObject</ref> constructor for a Q dependent object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Object</parametername>
</parameternamelist>
<parameterdescription>
<para>the T-valued function to be tabulated in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nQ</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of on nodes of the grid in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>QMin</parametername>
</parameternamelist>
<parameterdescription>
<para>the lower bound of the grid in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>QMax</parametername>
</parameternamelist>
<parameterdescription>
<para>the upper bound of the grid in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InterDegree</parametername>
</parameternamelist>
<parameterdescription>
<para>the interpolation degree on the grid in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Thresholds</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of quark thresholds </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Lambda</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the parameter in the function ln(ln(Q<superscript>2</superscript>/<Lambda/><superscript>2</superscript>)) used for the tabulation (default: 0.25) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/tabulateobject.h" line="61" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1TabulateObject_1a03bff5c0560780d99cd9ab985492c734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apfel::TabulateObject&lt; T &gt;::TabulateObject</definition>
        <argsstring>(std::function&lt; T(double const &amp;)&gt; const &amp;Object, int const &amp;nQ, double const &amp;QMin, double const &amp;QMax, int const &amp;InterDegree, std::vector&lt; double &gt; const &amp;Thresholds, std::function&lt; double(double const &amp;)&gt; const &amp;TabFunc, std::function&lt; double(double const &amp;)&gt; const &amp;InvTabFunc)</argsstring>
        <name>TabulateObject</name>
        <param>
          <type>std::function&lt; T(double const &amp;)&gt; const &amp;</type>
          <declname>Object</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>nQ</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>QMin</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>QMax</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>InterDegree</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>Thresholds</declname>
        </param>
        <param>
          <type>std::function&lt; double(double const &amp;)&gt; const &amp;</type>
          <declname>TabFunc</declname>
        </param>
        <param>
          <type>std::function&lt; double(double const &amp;)&gt; const &amp;</type>
          <declname>InvTabFunc</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classapfel_1_1TabulateObject" kindref="compound">TabulateObject</ref> constructor for a Q dependent object tabulated on a user-defined distribution in Q. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Object</parametername>
</parameternamelist>
<parameterdescription>
<para>the T-valued function to be tabulated in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nQ</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of on nodes of the grid in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>QMin</parametername>
</parameternamelist>
<parameterdescription>
<para>the lower bound of the grid in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>QMax</parametername>
</parameternamelist>
<parameterdescription>
<para>the upper bound of the grid in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InterDegree</parametername>
</parameternamelist>
<parameterdescription>
<para>the interpolation degree on the grid in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Thresholds</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of quark thresholds </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TabFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>the function to be used for the tabulation in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InvTabFunc</parametername>
</parameternamelist>
<parameterdescription>
<para>the inverse function of TabFunc (it has to be provided analytically) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/tabulateobject.h" line="81" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1TabulateObject_1aeefc9819847c847794cf60d8a29a0044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apfel::TabulateObject&lt; T &gt;::TabulateObject</definition>
        <argsstring>(std::function&lt; T(double const &amp;)&gt; const &amp;Object, std::vector&lt; double &gt; const &amp;Qg, int const &amp;InterDegree)</argsstring>
        <name>TabulateObject</name>
        <param>
          <type>std::function&lt; T(double const &amp;)&gt; const &amp;</type>
          <declname>Object</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>Qg</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>InterDegree</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classapfel_1_1TabulateObject" kindref="compound">TabulateObject</ref> constructor for a Q dependent object tabulated on a user-defined grid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Object</parametername>
</parameternamelist>
<parameterdescription>
<para>the T-valued function to be tabulated in Q </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Qg</parametername>
</parameternamelist>
<parameterdescription>
<para>the user-defined interpolation grid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InterDegree</parametername>
</parameternamelist>
<parameterdescription>
<para>the interpolation degree on the grid in Q </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/tabulateobject.h" line="97" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Evaluate functions</header>
      <description><para>List of functions to interpolate the tabulated object. </para>
</description>
      <memberdef kind="function" id="classapfel_1_1TabulateObject_1a1206af95488cd367d86f9eefd51ff96e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double apfel::TabulateObject&lt; T &gt;::EvaluatexQ</definition>
        <argsstring>(double const &amp;x, double const &amp;Q) const</argsstring>
        <name>EvaluatexQ</name>
        <param>
          <type>double const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>Q</declname>
        </param>
        <briefdescription>
<para>This function interpolates in x and Q. It is used for T = <ref refid="classapfel_1_1Distribution" kindref="compound">Distribution</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/tabulateobject.h" line="111" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1TabulateObject_1a80973ee290e2b80c9234244a14460259" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double apfel::TabulateObject&lt; T &gt;::EvaluatexQ</definition>
        <argsstring>(int const &amp;i, double const &amp;x, double const &amp;Q) const</argsstring>
        <name>EvaluatexQ</name>
        <param>
          <type>int const &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>Q</declname>
        </param>
        <briefdescription>
<para>This function interpolates in x and Q for a given element i. It is used for T = Set&lt;Distribution&gt;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/tabulateobject.h" line="116" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1TabulateObject_1a9cab3e4da901b4632acb487dcda17b01" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double apfel::TabulateObject&lt; T &gt;::EvaluatexzQ</definition>
        <argsstring>(double const &amp;x, double const &amp;z, double const &amp;Q) const</argsstring>
        <name>EvaluatexzQ</name>
        <param>
          <type>double const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>Q</declname>
        </param>
        <briefdescription>
<para>This function interpolates in x, z, and Q. It is used for T = DoubleOject&lt;Distribution&gt;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/tabulateobject.h" line="121" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1TabulateObject_1a99925f98da88730c529fb4554a27fb79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; int, double &gt;</type>
        <definition>std::map&lt;int, double&gt; apfel::TabulateObject&lt; T &gt;::EvaluateMapxQ</definition>
        <argsstring>(double const &amp;x, double const &amp;Q) const</argsstring>
        <name>EvaluateMapxQ</name>
        <param>
          <type>double const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>Q</declname>
        </param>
        <briefdescription>
<para>This function interpolates in x and Q and returns a map. It is used for T = Set&lt;Distribution&gt;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/tabulateobject.h" line="126" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The template <ref refid="classapfel_1_1TabulateObject" kindref="compound">TabulateObject</ref> class is a derived of the <ref refid="classapfel_1_1QGrid" kindref="compound">QGrid</ref> class that tabulates on object of type T (it can be a double, a <ref refid="classapfel_1_1Distribution" kindref="compound">Distribution</ref>, an <ref refid="classapfel_1_1Operator" kindref="compound">Operator</ref>, Set&lt;Distribution&gt;, a Set&lt;Operator&gt;) over a grid in Q, taking into account the possible presence of thresholds, and provides the method to evaluate the tabulated object at any generic value of Q. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>apfel::QGrid&lt; T &gt;</label>
        <link refid="classapfel_1_1QGrid"/>
      </node>
      <node id="1">
        <label>apfel::TabulateObject&lt; T &gt;</label>
        <link refid="classapfel_1_1TabulateObject"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>std::vector&lt; double &gt;</label>
      </node>
      <node id="2">
        <label>apfel::QGrid&lt; T &gt;</label>
        <link refid="classapfel_1_1QGrid"/>
        <childnode refid="3" relation="usage">
          <edgelabel>_nQg</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_Qg</edgelabel>
          <edgelabel>_Thresholds</edgelabel>
          <edgelabel>_fQg</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>apfel::TabulateObject&lt; T &gt;</label>
        <link refid="classapfel_1_1TabulateObject"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::vector&lt; int &gt;</label>
      </node>
    </collaborationgraph>
    <location file="inc/apfel/tabulateobject.h" line="25" column="3" bodyfile="inc/apfel/tabulateobject.h" bodystart="26" bodyend="128"/>
    <listofallmembers>
      <member refid="classapfel_1_1QGrid_1af11497a9f67e8e10192e5ee1d816dade" prot="protected" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>_fQg</name></member>
      <member refid="classapfel_1_1QGrid_1adfd57f2e4dee56d62a86e45d5185b2b3" prot="protected" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>_GridValues</name></member>
      <member refid="classapfel_1_1QGrid_1acff3cc7b2a176990a937c6d25b84ff24" prot="protected" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>_InterDegree</name></member>
      <member refid="classapfel_1_1QGrid_1aa4b3a59aea70c79d260592cbfdb316a3" prot="protected" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>_nQ</name></member>
      <member refid="classapfel_1_1QGrid_1a5ce1374dcd1a206c86b6bc1a80aadf57" prot="protected" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>_nQg</name></member>
      <member refid="classapfel_1_1QGrid_1ac50acb129168150b4c201835217e19ac" prot="protected" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>_Qg</name></member>
      <member refid="classapfel_1_1QGrid_1acceeb20586bb7797a442185d32b9bbae" prot="protected" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>_QMax</name></member>
      <member refid="classapfel_1_1QGrid_1a4f7c4faa8b1e9ba80331661994123089" prot="protected" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>_QMin</name></member>
      <member refid="classapfel_1_1QGrid_1a7d7765d66bbd218ed474d2aaf859cb88" prot="protected" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>_TabFunc</name></member>
      <member refid="classapfel_1_1QGrid_1af4d8ebad864790a72b74f5532bee6919" prot="protected" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>_Thresholds</name></member>
      <member refid="classapfel_1_1QGrid_1ad99c1934a66fb7481f8a79eac77e53d3" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>DerInterpolant</name></member>
      <member refid="classapfel_1_1QGrid_1abf5b77dfd5305988e216b798312228a3" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>Derive</name></member>
      <member refid="classapfel_1_1QGrid_1ac2e13c956b563254deb9d6c677feff9d" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>Evaluate</name></member>
      <member refid="classapfel_1_1TabulateObject_1a99925f98da88730c529fb4554a27fb79" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>EvaluateMapxQ</name></member>
      <member refid="classapfel_1_1TabulateObject_1a1206af95488cd367d86f9eefd51ff96e" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>EvaluatexQ</name></member>
      <member refid="classapfel_1_1TabulateObject_1a80973ee290e2b80c9234244a14460259" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>EvaluatexQ</name></member>
      <member refid="classapfel_1_1TabulateObject_1a9cab3e4da901b4632acb487dcda17b01" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>EvaluatexzQ</name></member>
      <member refid="classapfel_1_1QGrid_1a5988daad45edcd80bd39b2e6f88be606" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>GetFQGrid</name></member>
      <member refid="classapfel_1_1QGrid_1a61e70065647ccbc8388bac2227071594" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>GetQGrid</name></member>
      <member refid="classapfel_1_1QGrid_1aeb9849e0409b64e6718154d1bc815beb" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>GetQGridValues</name></member>
      <member refid="classapfel_1_1QGrid_1aeea1ac5fbc6d8f0dddb5015c0f310bf3" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>GetThesholdIndices</name></member>
      <member refid="classapfel_1_1QGrid_1aecee5c415c15fa8b837fd1bffa4cd2d3" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>GetThresholds</name></member>
      <member refid="classapfel_1_1QGrid_1a6d31f3adb8c00a927dd9cbcd515d071b" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>Integrate</name></member>
      <member refid="classapfel_1_1QGrid_1a58fbd0d8210e5d469bcaabd5fce5b7fb" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>InterDegree</name></member>
      <member refid="classapfel_1_1QGrid_1a73418aed8752703995851675372a47aa" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>Interpolant</name></member>
      <member refid="classapfel_1_1QGrid_1a9ba5658b710808b1eeaef1dbb784b848" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>IntInterpolant</name></member>
      <member refid="classapfel_1_1QGrid_1a545c18a37669f843ea7874c5e9e8d23c" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>nQ</name></member>
      <member refid="classapfel_1_1QGrid_1a785ad2d1e9680eaefc6f225c788e25b2" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>operator!=</name></member>
      <member refid="classapfel_1_1QGrid_1a3c1e36b8b96e4019777b2e07d7b07edc" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>operator==</name></member>
      <member refid="classapfel_1_1QGrid_1a29217afc5663b54d611dc307700e32da" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>QGrid</name></member>
      <member refid="classapfel_1_1QGrid_1a237fbe86ce7780636cdeb60d9f51d5e4" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>QGrid</name></member>
      <member refid="classapfel_1_1QGrid_1ad79a908a9bd73bcd0c2cc00a5f47bd7e" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>QGrid</name></member>
      <member refid="classapfel_1_1QGrid_1aa25abb29b9bc72b7aeb5d6e025a1d9c4" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>QGrid</name></member>
      <member refid="classapfel_1_1QGrid_1acd4156e722cbdc155f32d54ecc7432c0" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>QMax</name></member>
      <member refid="classapfel_1_1QGrid_1a0a1450c5d3c7988817a9302953437aea" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>QMin</name></member>
      <member refid="classapfel_1_1QGrid_1a2991f4e1f5773772f8ccb08c81058db5" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>SumBounds</name></member>
      <member refid="classapfel_1_1QGrid_1a69f28b6c7da9dbf3a6e48953ce15c172" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>TabFunc</name></member>
      <member refid="classapfel_1_1TabulateObject_1aae6bb3a4886b480727716a8be06b7f6f" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>TabulateObject</name></member>
      <member refid="classapfel_1_1TabulateObject_1a5338ef7f98041dbf7b2d35dcdcab5cfb" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>TabulateObject</name></member>
      <member refid="classapfel_1_1TabulateObject_1a03bff5c0560780d99cd9ab985492c734" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>TabulateObject</name></member>
      <member refid="classapfel_1_1TabulateObject_1aeefc9819847c847794cf60d8a29a0044" prot="public" virt="non-virtual"><scope>apfel::TabulateObject</scope><name>TabulateObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
