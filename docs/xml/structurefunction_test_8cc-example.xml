<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="structurefunction_test_8cc-example" kind="example">
    <compoundname>structurefunction_test.cc</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting filename="structurefunction_test.cc"><codeline><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>APFEL++<sp/>2017</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Valerio<sp/>Bertone:<sp/>valerio.bertone@cern.ch</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="apfelxx_8h" kindref="compound">apfel/apfelxx.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//SetVerbosityLevel(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="namespaceapfel_1a4c2d1010b19712c8c950c6aed5db7c98" kindref="member">apfel::Banner</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>x-space<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1Grid" kindref="compound">apfel::Grid</ref><sp/>g{{<ref refid="classapfel_1_1SubGrid" kindref="compound">apfel::SubGrid</ref>{100,1e-5,3},<sp/><ref refid="classapfel_1_1SubGrid" kindref="compound">apfel::SubGrid</ref>{60,1e-1,3},<sp/><ref refid="classapfel_1_1SubGrid" kindref="compound">apfel::SubGrid</ref>{50,6e-1,3},<sp/><ref refid="classapfel_1_1SubGrid" kindref="compound">apfel::SubGrid</ref>{50,8e-1,3}}};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initial<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mu0<sp/>=<sp/>sqrt(2);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vectors<sp/>of<sp/>thresholds</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>Thresholds<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>sqrt(2),<sp/>4.5,<sp/>175};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Perturbative<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PerturbativeOrder<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Running<sp/>coupling</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classapfel_1_1AlphaQCD" kindref="compound">apfel::AlphaQCD</ref><sp/>a{0.35,<sp/>sqrt(2),<sp/>Thresholds,<sp/>PerturbativeOrder};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;double&gt;</ref><sp/>Alphas{a,<sp/>100,<sp/>0.9,<sp/>1001,<sp/>3};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>as<sp/>=<sp/>[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>mu)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Alphas.<ref refid="classapfel_1_1QGrid_1ac2e13c956b563254deb9d6c677feff9d" kindref="member">Evaluate</ref>(mu);<sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Effective<sp/>charges.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::function&lt;std::vector&lt;double&gt;(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)&gt;<sp/>fBq<sp/>=<sp/>[=]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>-&gt;<sp/>std::vector&lt;double&gt;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__PhysConstants_1ga4e9304b2e9dfeb40a2ad1a3cfa6b2e6a" kindref="member">apfel::QCh2</ref>;<sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::function&lt;std::vector&lt;double&gt;(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)&gt;<sp/>fDq<sp/>=<sp/>[=]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>-&gt;<sp/>std::vector&lt;double&gt;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0};<sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>QCD<sp/>evolution<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>DglapObj<sp/>=<sp/><ref refid="namespaceapfel_1aaf2c9fc21fdc63421663a7859bc97e1e" kindref="member">InitializeDglapObjectsQCD</ref>(g,<sp/>Thresholds);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>the<sp/>DGLAP<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>EvolvedPDFs<sp/>=<sp/><ref refid="namespaceapfel_1ad66196392cf742bfd93e1faeedaf3e0b" kindref="member">BuildDglap</ref>(DglapObj,<sp/>apfel::LHToyPDFs,<sp/>mu0,<sp/>PerturbativeOrder,<sp/>as);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tabulate<sp/>PDFs</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Set&lt;apfel::Distribution&gt;</ref>&gt;<sp/>TabulatedPDFs{*EvolvedPDFs,<sp/>50,<sp/>1,<sp/>1000,<sp/>3};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Evolved<sp/>PDFs</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>PDFs<sp/>=<sp/>[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/>std::map&lt;int,double&gt;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TabulatedPDFs.<ref refid="classapfel_1_1TabulateObject_1a99925f98da88730c529fb4554a27fb79" kindref="member">EvaluateMapxQ</ref>(x,Q);<sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>coefficient<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>F2Obj<sp/>=<sp/><ref refid="namespaceapfel_1a6cdbaf2a572767fc8d2901b20f03e7c1" kindref="member">InitializeF2NCObjectsZM</ref>(g,<sp/>Thresholds);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>FLObj<sp/>=<sp/><ref refid="namespaceapfel_1a0dd97cfdfd06c2fefd02bc64a8aa6cb5" kindref="member">InitializeFLNCObjectsZM</ref>(g,<sp/>Thresholds);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>F3Obj<sp/>=<sp/><ref refid="namespaceapfel_1a76042a24523c60d7e5367f48984a8a7f" kindref="member">InitializeF3NCObjectsZM</ref>(g,<sp/>Thresholds);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>structure<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>F2<sp/>=<sp/><ref refid="namespaceapfel_1ae22702976343188c62e6f4091327e4b7" kindref="member">BuildStructureFunctions</ref>(F2Obj,<sp/>PDFs,<sp/>PerturbativeOrder,<sp/>as,<sp/>fBq);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>FL<sp/>=<sp/><ref refid="namespaceapfel_1ae22702976343188c62e6f4091327e4b7" kindref="member">BuildStructureFunctions</ref>(FLObj,<sp/>PDFs,<sp/>PerturbativeOrder,<sp/>as,<sp/>fBq);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>F3<sp/>=<sp/><ref refid="namespaceapfel_1ae22702976343188c62e6f4091327e4b7" kindref="member">BuildStructureFunctions</ref>(F3Obj,<sp/>PDFs,<sp/>PerturbativeOrder,<sp/>as,<sp/>fDq);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Tabulate<sp/>Structure<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Distribution&gt;</ref><sp/>F2total<sp/>{[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/><ref refid="classapfel_1_1Distribution" kindref="compound">apfel::Distribution</ref>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F2.at(0).<ref refid="classapfel_1_1Interpolator_1aaa04fd13b61de9eca4bce12c4afd8e97" kindref="member">Evaluate</ref>(Q);<sp/>},<sp/>50,<sp/>1,<sp/>1000,<sp/>3,<sp/>Thresholds};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Distribution&gt;</ref><sp/>F2light<sp/>{[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/><ref refid="classapfel_1_1Distribution" kindref="compound">apfel::Distribution</ref>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F2.at(1).<ref refid="classapfel_1_1Interpolator_1aaa04fd13b61de9eca4bce12c4afd8e97" kindref="member">Evaluate</ref>(Q)<sp/>+<sp/>F2.at(2).Evaluate(Q)<sp/>+<sp/>F2.at(3).Evaluate(Q);<sp/>},<sp/>50,<sp/>1,<sp/>1000,<sp/>3,<sp/>Thresholds};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Distribution&gt;</ref><sp/>F2charm<sp/>{[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/><ref refid="classapfel_1_1Distribution" kindref="compound">apfel::Distribution</ref>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F2.at(4).<ref refid="classapfel_1_1Interpolator_1aaa04fd13b61de9eca4bce12c4afd8e97" kindref="member">Evaluate</ref>(Q);<sp/>},<sp/>50,<sp/>1,<sp/>1000,<sp/>3,<sp/>Thresholds};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Distribution&gt;</ref><sp/>F2bottom{[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/><ref refid="classapfel_1_1Distribution" kindref="compound">apfel::Distribution</ref>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F2.at(5).<ref refid="classapfel_1_1Interpolator_1aaa04fd13b61de9eca4bce12c4afd8e97" kindref="member">Evaluate</ref>(Q);<sp/>},<sp/>50,<sp/>1,<sp/>1000,<sp/>3,<sp/>Thresholds};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Distribution&gt;</ref><sp/>FLtotal<sp/>{[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/><ref refid="classapfel_1_1Distribution" kindref="compound">apfel::Distribution</ref>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FL.at(0).<ref refid="classapfel_1_1Interpolator_1aaa04fd13b61de9eca4bce12c4afd8e97" kindref="member">Evaluate</ref>(Q);<sp/>},<sp/>50,<sp/>1,<sp/>1000,<sp/>3,<sp/>Thresholds};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Distribution&gt;</ref><sp/>FLlight<sp/>{[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/><ref refid="classapfel_1_1Distribution" kindref="compound">apfel::Distribution</ref>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FL.at(1).<ref refid="classapfel_1_1Interpolator_1aaa04fd13b61de9eca4bce12c4afd8e97" kindref="member">Evaluate</ref>(Q)<sp/>+<sp/>FL.at(2).Evaluate(Q)<sp/>+<sp/>FL.at(3).Evaluate(Q);<sp/>},<sp/>50,<sp/>1,<sp/>1000,<sp/>3,<sp/>Thresholds};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Distribution&gt;</ref><sp/>FLcharm<sp/>{[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/><ref refid="classapfel_1_1Distribution" kindref="compound">apfel::Distribution</ref>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FL.at(4).<ref refid="classapfel_1_1Interpolator_1aaa04fd13b61de9eca4bce12c4afd8e97" kindref="member">Evaluate</ref>(Q);<sp/>},<sp/>50,<sp/>1,<sp/>1000,<sp/>3,<sp/>Thresholds};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Distribution&gt;</ref><sp/>FLbottom{[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/><ref refid="classapfel_1_1Distribution" kindref="compound">apfel::Distribution</ref>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FL.at(5).<ref refid="classapfel_1_1Interpolator_1aaa04fd13b61de9eca4bce12c4afd8e97" kindref="member">Evaluate</ref>(Q);<sp/>},<sp/>50,<sp/>1,<sp/>1000,<sp/>3,<sp/>Thresholds};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Distribution&gt;</ref><sp/>F3total<sp/>{[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/><ref refid="classapfel_1_1Distribution" kindref="compound">apfel::Distribution</ref>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F3.at(0).<ref refid="classapfel_1_1Interpolator_1aaa04fd13b61de9eca4bce12c4afd8e97" kindref="member">Evaluate</ref>(Q);<sp/>},<sp/>50,<sp/>1,<sp/>1000,<sp/>3,<sp/>Thresholds};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Distribution&gt;</ref><sp/>F3light<sp/>{[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/><ref refid="classapfel_1_1Distribution" kindref="compound">apfel::Distribution</ref>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F3.at(1).<ref refid="classapfel_1_1Interpolator_1aaa04fd13b61de9eca4bce12c4afd8e97" kindref="member">Evaluate</ref>(Q)<sp/>+<sp/>F3.at(2).Evaluate(Q)<sp/>+<sp/>F3.at(3).Evaluate(Q);<sp/>},<sp/>50,<sp/>1,<sp/>1000,<sp/>3,<sp/>Thresholds};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Distribution&gt;</ref><sp/>F3charm<sp/>{[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/><ref refid="classapfel_1_1Distribution" kindref="compound">apfel::Distribution</ref>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F3.at(4).<ref refid="classapfel_1_1Interpolator_1aaa04fd13b61de9eca4bce12c4afd8e97" kindref="member">Evaluate</ref>(Q);<sp/>},<sp/>50,<sp/>1,<sp/>1000,<sp/>3,<sp/>Thresholds};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classapfel_1_1TabulateObject" kindref="compound">apfel::TabulateObject&lt;apfel::Distribution&gt;</ref><sp/>F3bottom{[&amp;]<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>Q)<sp/>-&gt;<sp/><ref refid="classapfel_1_1Distribution" kindref="compound">apfel::Distribution</ref>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>F3.at(5).<ref refid="classapfel_1_1Interpolator_1aaa04fd13b61de9eca4bce12c4afd8e97" kindref="member">Evaluate</ref>(Q);<sp/>},<sp/>50,<sp/>1,<sp/>1000,<sp/>3,<sp/>Thresholds};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="classapfel_1_1Timer" kindref="compound">apfel::Timer</ref><sp/>t;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Final<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Q<sp/>=<sp/>100;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::scientific<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Alphas(Q)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>as(Q)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;<sp/>xlha<sp/>=<sp/>{1e-5,<sp/>1e-4,<sp/>1e-3,<sp/>1e-2,<sp/>1e-1,<sp/>3e-1,<sp/>5e-1,<sp/>7e-1,<sp/>9e-1};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>x<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>F2light<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>F2charm<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>F2bottom<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>F2total<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x<sp/>:<sp/>xlha)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::setprecision(1)<sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(4)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>F2light.EvaluatexQ(x,Q)<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>F2charm.EvaluatexQ(x,Q)<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>F2bottom.EvaluatexQ(x,Q)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>F2total.EvaluatexQ(x,Q)<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>x<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>FLlight<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>FLcharm<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>FLbottom<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>FLtotal<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x<sp/>:<sp/>xlha)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::setprecision(1)<sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(4)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>FLlight.EvaluatexQ(x,Q)<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>FLcharm.EvaluatexQ(x,Q)<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>FLbottom.EvaluatexQ(x,Q)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>FLtotal.EvaluatexQ(x,Q)<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>x<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>F3light<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>F3charm<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>F3bottom<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>F3total<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>x<sp/>:<sp/>xlha)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::setprecision(1)<sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(4)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>F3light.EvaluatexQ(x,Q)<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>F3charm.EvaluatexQ(x,Q)<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>F3bottom.EvaluatexQ(x,Q)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>F3total.EvaluatexQ(x,Q)<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>t.<ref refid="classapfel_1_1Timer_1a015b2c516bb668f392faa6d0a5eae3c1" kindref="member">stop</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1000000;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Interpolating<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>k<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>times<sp/>F2<sp/>on<sp/>the<sp/>grid...<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>t.<ref refid="classapfel_1_1Timer_1a8b8ffd3f8ceb45b50ecd2d7b00f84ccb" kindref="member">start</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>F2total.EvaluatexQ(0.05,Q);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>t.<ref refid="classapfel_1_1Timer_1a015b2c516bb668f392faa6d0a5eae3c1" kindref="member">stop</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
  </compounddef>
</doxygen>
