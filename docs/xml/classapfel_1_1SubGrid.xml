<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classapfel_1_1SubGrid" kind="class" language="C++" prot="public">
    <compoundname>apfel::SubGrid</compoundname>
    <includes refid="subgrid_8h" local="no">subgrid.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classapfel_1_1SubGrid_1a661733d2dc527c9ebcc8c70662e3589a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int apfel::SubGrid::_nx</definition>
        <argsstring></argsstring>
        <name>_nx</name>
        <briefdescription>
<para>Number intervals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="58" column="25" bodyfile="inc/apfel/subgrid.h" bodystart="58" bodyend="55"/>
      </memberdef>
      <memberdef kind="variable" id="classapfel_1_1SubGrid_1aa4519b25fee1c9b8f975e46791aff4fc" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int apfel::SubGrid::_InterDegree</definition>
        <argsstring></argsstring>
        <name>_InterDegree</name>
        <briefdescription>
<para>Interpolation degree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="59" column="25" bodyfile="inc/apfel/subgrid.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapfel_1_1SubGrid_1aa7c7452cc704137c2cf6722e0ca38c31" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double apfel::SubGrid::_xMin</definition>
        <argsstring></argsstring>
        <name>_xMin</name>
        <briefdescription>
<para>Minumim value of x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="60" column="25" bodyfile="inc/apfel/subgrid.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapfel_1_1SubGrid_1ab73f59f5d7f8284a86150f813902d924" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double apfel::SubGrid::_xMax</definition>
        <argsstring></argsstring>
        <name>_xMax</name>
        <briefdescription>
<para>Maximum value of x (should always be 1) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="61" column="25" bodyfile="inc/apfel/subgrid.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapfel_1_1SubGrid_1ae34adf9e8480d0218ea472dbed0cb2ac" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double apfel::SubGrid::_Step</definition>
        <argsstring></argsstring>
        <name>_Step</name>
        <briefdescription>
<para>Step of the logarthmically spaced grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="62" column="25" bodyfile="inc/apfel/subgrid.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapfel_1_1SubGrid_1a1d51d2837145e52e3e64d8666c522b77" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; apfel::SubGrid::_xsg</definition>
        <argsstring></argsstring>
        <name>_xsg</name>
        <briefdescription>
<para>Actual grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="63" column="17" bodyfile="inc/apfel/subgrid.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapfel_1_1SubGrid_1ae531f074711c454f6e28b9212fa730be" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; apfel::SubGrid::_lxsg</definition>
        <argsstring></argsstring>
        <name>_lxsg</name>
        <briefdescription>
<para>The log of the grid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="64" column="17" bodyfile="inc/apfel/subgrid.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classapfel_1_1SubGrid_1aee9d569772596ac57b7d984b7cb9b330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apfel::SubGrid::SubGrid</definition>
        <argsstring>(int const &amp;nx, double const &amp;xMin, int const &amp;InterDegree)</argsstring>
        <name>SubGrid</name>
        <param>
          <type>int const &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>xMin</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>InterDegree</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classapfel_1_1SubGrid" kindref="compound">SubGrid</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nx</parametername>
</parameternamelist>
<parameterdescription>
<para>number of grid points in x. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xMin</parametername>
</parameternamelist>
<parameterdescription>
<para>lower edge x of the grid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InterDegree</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation degree. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1SubGrid_1a5c7fe00b92bc11957caaec41761cb9a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apfel::SubGrid::SubGrid</definition>
        <argsstring>(std::vector&lt; double &gt; const &amp;xsg, int const &amp;InterDegree)</argsstring>
        <name>SubGrid</name>
        <param>
          <type>std::vector&lt; double &gt; const &amp;</type>
          <declname>xsg</declname>
        </param>
        <param>
          <type>int const &amp;</type>
          <declname>InterDegree</declname>
        </param>
        <briefdescription>
<para>The <ref refid="classapfel_1_1SubGrid" kindref="compound">SubGrid</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xsg</parametername>
</parameternamelist>
<parameterdescription>
<para>a std::vector with the nodes of the grid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InterDegree</parametername>
</parameternamelist>
<parameterdescription>
<para>interpolation degree </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="38" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1SubGrid_1a64eeaa0d9731a1ea70b9dafb07cc83bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool apfel::SubGrid::operator==</definition>
        <argsstring>(SubGrid const &amp;sg) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="classapfel_1_1SubGrid" kindref="compound">SubGrid</ref> const &amp;</type>
          <declname>sg</declname>
        </param>
        <briefdescription>
<para>Check whether SubGrids are equal. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sg</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classapfel_1_1SubGrid" kindref="compound">SubGrid</ref> to be compared </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="45" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1SubGrid_1afb724de1eda74f4c92a748782e75343a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool apfel::SubGrid::operator!=</definition>
        <argsstring>(SubGrid const &amp;sg) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="classapfel_1_1SubGrid" kindref="compound">SubGrid</ref> const &amp;</type>
          <declname>sg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="46" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1SubGrid_1ac9c8d18ab6868c90679a2b66f5616c81" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int apfel::SubGrid::nx</definition>
        <argsstring>() const</argsstring>
        <name>nx</name>
        <briefdescription>
<para>return the number of x points </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="49" column="32" bodyfile="inc/apfel/subgrid.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1SubGrid_1a034b0650bce863ed305f4aaa188f1d8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int apfel::SubGrid::InterDegree</definition>
        <argsstring>() const</argsstring>
        <name>InterDegree</name>
        <briefdescription>
<para>return the interpolation degree </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="50" column="32" bodyfile="inc/apfel/subgrid.h" bodystart="50" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1SubGrid_1a706414872d99bf4b1cc846df7b1edbeb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double apfel::SubGrid::xMin</definition>
        <argsstring>() const</argsstring>
        <name>xMin</name>
        <briefdescription>
<para>return the minimum node value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="51" column="32" bodyfile="inc/apfel/subgrid.h" bodystart="51" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1SubGrid_1a6af420df896db5753024435df1af48ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double apfel::SubGrid::xMax</definition>
        <argsstring>() const</argsstring>
        <name>xMax</name>
        <briefdescription>
<para>return the maximum node value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="52" column="32" bodyfile="inc/apfel/subgrid.h" bodystart="52" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1SubGrid_1a9093ca75b0d5329bb6e561a3e14370ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double apfel::SubGrid::Step</definition>
        <argsstring>() const</argsstring>
        <name>Step</name>
        <briefdescription>
<para>return the step size of the log grid </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="53" column="32" bodyfile="inc/apfel/subgrid.h" bodystart="53" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1SubGrid_1a93779b8b5a61f42cc6bd2bda138eefd5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt; const  &amp;</type>
        <definition>std::vector&lt;double&gt; const&amp; apfel::SubGrid::GetGrid</definition>
        <argsstring>() const</argsstring>
        <name>GetGrid</name>
        <briefdescription>
<para>return the grid </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="54" column="23" bodyfile="inc/apfel/subgrid.h" bodystart="54" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1SubGrid_1a39bdf80760a66b2c9b6a2bb468deef7f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt; const  &amp;</type>
        <definition>std::vector&lt;double&gt; const&amp; apfel::SubGrid::GetLogGrid</definition>
        <argsstring>() const</argsstring>
        <name>GetLogGrid</name>
        <briefdescription>
<para>return the log-grid </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="55" column="23" bodyfile="inc/apfel/subgrid.h" bodystart="55" bodyend="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classapfel_1_1SubGrid_1a92e19b1139623f0899b8ef1532a72061" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, SubGrid const &amp;sg)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="classapfel_1_1SubGrid" kindref="compound">SubGrid</ref> const &amp;</type>
          <declname>sg</declname>
        </param>
        <briefdescription>
<para>Method which prints <ref refid="classapfel_1_1SubGrid" kindref="compound">SubGrid</ref> with cout &lt;&lt;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/subgrid.h" line="66" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for the x-space interpolation SubGrids. </para>
    </briefdescription>
    <detaileddescription>
<para>Subgrids are the building blocks of the interpolation procedure. This class defines the &quot;SubGrid&quot; object that includes, apart from the grid itself, also the relevant parameters. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>std::vector&lt; double &gt;</label>
      </node>
      <node id="1">
        <label>apfel::SubGrid</label>
        <link refid="classapfel_1_1SubGrid"/>
        <childnode refid="2" relation="usage">
          <edgelabel>_lxsg</edgelabel>
          <edgelabel>_xsg</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="inc/apfel/subgrid.h" line="22" column="3" bodyfile="inc/apfel/subgrid.h" bodystart="23" bodyend="67"/>
    <listofallmembers>
      <member refid="classapfel_1_1SubGrid_1aa4519b25fee1c9b8f975e46791aff4fc" prot="private" virt="non-virtual"><scope>apfel::SubGrid</scope><name>_InterDegree</name></member>
      <member refid="classapfel_1_1SubGrid_1ae531f074711c454f6e28b9212fa730be" prot="private" virt="non-virtual"><scope>apfel::SubGrid</scope><name>_lxsg</name></member>
      <member refid="classapfel_1_1SubGrid_1a661733d2dc527c9ebcc8c70662e3589a" prot="private" virt="non-virtual"><scope>apfel::SubGrid</scope><name>_nx</name></member>
      <member refid="classapfel_1_1SubGrid_1ae34adf9e8480d0218ea472dbed0cb2ac" prot="private" virt="non-virtual"><scope>apfel::SubGrid</scope><name>_Step</name></member>
      <member refid="classapfel_1_1SubGrid_1ab73f59f5d7f8284a86150f813902d924" prot="private" virt="non-virtual"><scope>apfel::SubGrid</scope><name>_xMax</name></member>
      <member refid="classapfel_1_1SubGrid_1aa7c7452cc704137c2cf6722e0ca38c31" prot="private" virt="non-virtual"><scope>apfel::SubGrid</scope><name>_xMin</name></member>
      <member refid="classapfel_1_1SubGrid_1a1d51d2837145e52e3e64d8666c522b77" prot="private" virt="non-virtual"><scope>apfel::SubGrid</scope><name>_xsg</name></member>
      <member refid="classapfel_1_1SubGrid_1a93779b8b5a61f42cc6bd2bda138eefd5" prot="public" virt="non-virtual"><scope>apfel::SubGrid</scope><name>GetGrid</name></member>
      <member refid="classapfel_1_1SubGrid_1a39bdf80760a66b2c9b6a2bb468deef7f" prot="public" virt="non-virtual"><scope>apfel::SubGrid</scope><name>GetLogGrid</name></member>
      <member refid="classapfel_1_1SubGrid_1a034b0650bce863ed305f4aaa188f1d8c" prot="public" virt="non-virtual"><scope>apfel::SubGrid</scope><name>InterDegree</name></member>
      <member refid="classapfel_1_1SubGrid_1ac9c8d18ab6868c90679a2b66f5616c81" prot="public" virt="non-virtual"><scope>apfel::SubGrid</scope><name>nx</name></member>
      <member refid="classapfel_1_1SubGrid_1afb724de1eda74f4c92a748782e75343a" prot="public" virt="non-virtual"><scope>apfel::SubGrid</scope><name>operator!=</name></member>
      <member refid="classapfel_1_1SubGrid_1a92e19b1139623f0899b8ef1532a72061" prot="private" virt="non-virtual"><scope>apfel::SubGrid</scope><name>operator&lt;&lt;</name></member>
      <member refid="classapfel_1_1SubGrid_1a64eeaa0d9731a1ea70b9dafb07cc83bf" prot="public" virt="non-virtual"><scope>apfel::SubGrid</scope><name>operator==</name></member>
      <member refid="classapfel_1_1SubGrid_1a9093ca75b0d5329bb6e561a3e14370ea" prot="public" virt="non-virtual"><scope>apfel::SubGrid</scope><name>Step</name></member>
      <member refid="classapfel_1_1SubGrid_1aee9d569772596ac57b7d984b7cb9b330" prot="public" virt="non-virtual"><scope>apfel::SubGrid</scope><name>SubGrid</name></member>
      <member refid="classapfel_1_1SubGrid_1a5c7fe00b92bc11957caaec41761cb9a9" prot="public" virt="non-virtual"><scope>apfel::SubGrid</scope><name>SubGrid</name></member>
      <member refid="classapfel_1_1SubGrid_1a6af420df896db5753024435df1af48ba" prot="public" virt="non-virtual"><scope>apfel::SubGrid</scope><name>xMax</name></member>
      <member refid="classapfel_1_1SubGrid_1a706414872d99bf4b1cc846df7b1edbeb" prot="public" virt="non-virtual"><scope>apfel::SubGrid</scope><name>xMin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
