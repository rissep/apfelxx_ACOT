<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classapfel_1_1DoubleExponentialQuadrature" kind="class" language="C++" prot="public">
    <compoundname>apfel::DoubleExponentialQuadrature</compoundname>
    <includes refid="doubleexponentialquadrature_8h" local="no">doubleexponentialquadrature.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classapfel_1_1DoubleExponentialQuadrature_1a4e34f614fe31b2b1d722cccbd0528a22" prot="private" static="no" mutable="no">
        <type>int const</type>
        <definition>int const apfel::DoubleExponentialQuadrature::_nu</definition>
        <argsstring></argsstring>
        <name>_nu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/doubleexponentialquadrature.h" line="41" column="18" bodyfile="inc/apfel/doubleexponentialquadrature.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classapfel_1_1DoubleExponentialQuadrature_1a48457b7ce7e2f58cc7a4289c8de5ba00" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double apfel::DoubleExponentialQuadrature::_aw[8000]</definition>
        <argsstring>[8000]</argsstring>
        <name>_aw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/doubleexponentialquadrature.h" line="42" column="18" bodyfile="inc/apfel/doubleexponentialquadrature.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classapfel_1_1DoubleExponentialQuadrature_1aa866b56a2a78b8cc7ce8e3eab0615ff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>apfel::DoubleExponentialQuadrature::DoubleExponentialQuadrature</definition>
        <argsstring>(int const &amp;nu=0, double const &amp;eps=1e-5)</argsstring>
        <name>DoubleExponentialQuadrature</name>
        <param>
          <type>int const &amp;</type>
          <declname>nu</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>eps</declname>
          <defval>1e-5</defval>
        </param>
        <briefdescription>
<para>The <ref refid="classapfel_1_1Integrator" kindref="compound">Integrator</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nu</parametername>
</parameternamelist>
<parameterdescription>
<para>the order of the Bessel function (default: 0) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eps</parametername>
</parameternamelist>
<parameterdescription>
<para>relative integration accuracy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/doubleexponentialquadrature.h" line="29" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classapfel_1_1DoubleExponentialQuadrature_1af9c3896a4859bc74803ad537113585a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T apfel::DoubleExponentialQuadrature::transform</definition>
        <argsstring>(std::function&lt; T(double const &amp;)&gt; const &amp;f, double const &amp;qT) const</argsstring>
        <name>transform</name>
        <param>
          <type>std::function&lt; T(double const &amp;)&gt; const &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>double const &amp;</type>
          <declname>qT</declname>
        </param>
        <briefdescription>
<para>Function that transform the input function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>function to be transformed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>qT</parametername>
</parameternamelist>
<parameterdescription>
<para>value of qT in which to compute the transform </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of the transform </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/apfel/doubleexponentialquadrature.h" line="38" column="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>DE-Quadrature Numerical automatic integrator for improper integral using double dxponential (DE) quadrature. The code is a manipulation of the code linked here: </para>
    </briefdescription>
    <detaileddescription>
<para><ulink url="http://www.kurims.kyoto-u.ac.jp/~ooura/intde.html">http://www.kurims.kyoto-u.ac.jp/~ooura/intde.html</ulink> </para>
    </detaileddescription>
    <location file="inc/apfel/doubleexponentialquadrature.h" line="21" column="3" bodyfile="inc/apfel/doubleexponentialquadrature.h" bodystart="22" bodyend="43"/>
    <listofallmembers>
      <member refid="classapfel_1_1DoubleExponentialQuadrature_1a48457b7ce7e2f58cc7a4289c8de5ba00" prot="private" virt="non-virtual"><scope>apfel::DoubleExponentialQuadrature</scope><name>_aw</name></member>
      <member refid="classapfel_1_1DoubleExponentialQuadrature_1a4e34f614fe31b2b1d722cccbd0528a22" prot="private" virt="non-virtual"><scope>apfel::DoubleExponentialQuadrature</scope><name>_nu</name></member>
      <member refid="classapfel_1_1DoubleExponentialQuadrature_1aa866b56a2a78b8cc7ce8e3eab0615ff7" prot="public" virt="non-virtual"><scope>apfel::DoubleExponentialQuadrature</scope><name>DoubleExponentialQuadrature</name></member>
      <member refid="classapfel_1_1DoubleExponentialQuadrature_1af9c3896a4859bc74803ad537113585a8" prot="public" virt="non-virtual"><scope>apfel::DoubleExponentialQuadrature</scope><name>transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
